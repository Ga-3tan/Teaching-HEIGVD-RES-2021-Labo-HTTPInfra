version: "3.3"

services:

  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80" # Port for incoming requests on reverse proxy
    ports:
      - "80:80" # Port for requests
      - "8080:8080" # Port for Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  portainer:
    image: portainer/portainer-ce:latest
    container_name: "portainer"
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - "8989:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  apache_php:
    image: "res/apache_php"
    labels:
      - "traefik.enable=true" # Enables Traefik reverse proxy
      - "traefik.http.routers.static.rule=Host(`demo.res.ch`) && PathPrefix(`/`)" # When Host header has the prefix /
      - "traefik.http.routers.static.entrypoints=web"
      - "traefik.http.services.static-service.loadBalancer.sticky.cookie=true" # Enables sticky sessions
      - "traefik.http.services.static-service.loadBalancer.sticky.cookie.name=static_sticky" # Sets the cookie name

  node_express:
    image: "res/node_express"
    labels:
      - "traefik.enable=true" # Enables Traefik reverse proxy
      - "traefik.http.routers.dynamic.rule=Host(`demo.res.ch`) && PathPrefix(`/api`)" # When Host header has the prefix /api
      - "traefik.http.middlewares.strip-dynamic.stripprefix.prefixes=/api" # Rule to remove the prefix /api when forwarding to the node server
      - "traefik.http.middlewares.strip-dynamic.stripprefix.forceSlash=false" # Doesn't force slashes on host name
      - "traefik.http.routers.dynamic.middlewares=strip-dynamic" # Applies the stripprefix rule
      - "traefik.http.routers.dynamic.entrypoints=web"
      - "traefik.http.services.dynamic-service.loadBalancer.sticky.cookie=true" # Enables sticky sessions
      - "traefik.http.services.dynamic-service.loadBalancer.sticky.cookie.name=dynamic_sticky" # Sets the cookie name

# Container used to test and demonstrate Traefik load balancing
  whoami:
    image: "traefik/whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`demo.res.ch`) && PathPrefix(`/test`)"
      - "traefik.http.middlewares.strip-whoami.stripprefix.prefixes=/test" # Rule to remove the prefix /test when forwarding to the server
      - "traefik.http.middlewares.strip-whoami.stripprefix.forceSlash=false" # Doesn't force slashes on host name
      - "traefik.http.routers.whoami.middlewares=strip-whoami" # Applies the stripprefix rule
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.services.whoami-service.loadBalancer.sticky.cookie=true" # Enables sticky sessions
      - "traefik.http.services.whoami-service.loadBalancer.sticky.cookie.name=whoami_sticky" # Sets the cookie name

volumes:
  portainer_data:
